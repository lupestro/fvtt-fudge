name: Release Creation

on:
  push:
    tags:
      - 'release-*'


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3


    # Set up our some variables for future use
    # Adapted from https://github.community/t/how-to-get-just-the-tag-name/16241/7
    # Tag name: ${{ steps.get_vars.outputs.TAG_NAME }}
    # Zip name: ${{ steps.get_vars.outputs.ZIP_NAME }}
    # Expected Release Download URL: ${{ steps.get_vars.outputs.RELEASE_DOWNLOAD_URL }}
    # Expected Release system.json URL: ${{ steps.get_vars.outputs.RELEASE_INSTALL_URL }}
    # Stringified system.json contents: ${{ steps.get_vars.outputs.SYSTEM_JSON }}
    - name: Set up variables
      id: get_vars
      run: |
        TAG=${GITHUB_REF/refs\/tags\//}
        echo "TAG_NAME=$TAG" >> $GITHUB_OUTPUT
        echo "ZIP_NAME=fudge-rpg-$TAG.zip" >> $GITHUB_OUTPUT
        echo "RELEASE_DOWNLOAD_URL=https://github.com/${{github.repository}}/releases/download/$TAG/fudge-rpg-$TAG.zip" >> $GITHUB_OUTPUT
        echo "RELEASE_INSTALL_URL=https://github.com/${{github.repository}}/releases/download/$TAG/system.json" >> $GITHUB_OUTPUT
        JSON=$(cat ./system.json)
        echo "SYSTEM_JSON=${JSON//'%'/'%25'}" >>$GITHUB_OUTPUT


    # Run some tests to make sure our `system.json` is correct
    # Exit before setting up node if not
    - name: Verify correct naming
      env:
        TAG_NAME: ${{ steps.get_vars.outputs.TAG_NAME }}
        RELEASE_DOWNLOAD: ${{steps.get_vars.outputs.RELEASE_DOWNLOAD_URL}}
        # Extract version and download url from system.json
        # https://docs.github.com/en/actions/learn-github-actions/expressions#fromjson
        PACKAGE_VERSION: ${{fromJSON(steps.get_vars.outputs.SYSTEM_JSON).version}}
        PACKAGE_DOWNLOAD: ${{fromJSON(steps.get_vars.outputs.SYSTEM_JSON).download}}
      run: |
        # Validate that the tag being released matches the package version.
        if [[ ! $TAG_NAME == release-$PACKAGE_VERSION ]]; then
          echo "The system.json version does not match tag name."
          echo "system.json: $PACKAGE_VERSION"
          echo "tag name: $TAG_NAME"
          echo "Please fix this and push the tag again."
          exit 1
        fi

        # Validate that the package download url matches the release ashttps://github.blog/changelog/2022-10-11-github-actions-deprecating-save-state-and-set-output-commands/set that will be created.
        if [[ ! $RELEASE_DOWNLOAD == $PACKAGE_DOWNLOAD ]]; then
          echo "The system.json download url does not match the created release asset url."
          echo "system.json: $PACKAGE_DOWNLOAD"
          echo "release asset url: $RELEASE_DOWNLOAD"
          echo "Please fix this and push the tag again."
          exit 1
        fi


    # Set up Node
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'


    # `npm ci` is recommended:
    # https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs
    - name: Install Dependencies
      uses: pnpm/action-setup@v2
      with: 
        version: 8
        run_install: true


    # Run our `build` script
    - name: Build All
      run: |
        pnpm install
        pnpm build
        mv --force fudge-compiled.mjs fudge.mjs

    # Create a zip file with all files required by the module to add to the release
    - run: zip ${{steps.get_vars.outputs.ZIP_NAME}} -r lang templates packs/attributes packs/journals packs/ff-*  styles/*.css fudge.mjs fudge-compiled.mjs.map LICENSE.txt FudgeOGLicense.pdf fudge_srd.pdf README.md system.json template.json


    # Create a release for this specific version
    - name: Update Release with Files
      id: create_version_release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true # Set this to false if you want to prevent updating existing releases
        name: ${{steps.get_vars.outputs.TAG_NAME}}
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: './system.json, ./${{steps.get_vars.outputs.ZIP_NAME}}'
        tag: ${{steps.get_vars.outputs.TAG_NAME}}
        body: 'Please copy/paste the current release data from CHANGELOG.md into this field'