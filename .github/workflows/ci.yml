name: CI Build

on:
  push:
    branches: [ $default-branch ]
  pull_request:
    branches: [ $default-branch ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    # Set up our some variables for future use
    # Adapted from https://github.community/t/how-to-get-just-the-tag-name/16241/7
    # Tag name: ${{ steps.get_vars.outputs.TAG_NAME }}
    # Zip name: ${{ steps.get_vars.outputs.ZIP_NAME }}
    # Expected Release Download URL: ${{ steps.get_vars.outputs.RELEASE_DOWNLOAD_URL }}
    # Expected Release system.json URL: ${{ steps.get_vars.outputs.RELEASE_INSTALL_URL }}
    # Stringified system.json contents: ${{ steps.get_vars.outputs.SYSTEM_JSON }}
    - name: Set up variables
      id: get_vars
      run: |
        echo "ZIP_NAME=fudge-rpg.zip" >> $GITHUB_OUTPUT
        JSON=$(cat ./system.json)
        echo ::set-output name=SYSTEM_JSON::${JSON//'%'/'%25'}

    - name: Verify correct naming
      env:
          ZIP_NAME: ${{ steps.get_vars.outputs.ZIP_NAME }}
          # SYSTEM_JSON: ${{steps.get_vars.outputs.SYSTEM_JSON}}
          # Extract version and download url from system.json
          # https://docs.github.com/en/actions/learn-github-actions/expressions#fromjson
          PACKAGE_VERSION: ${{fromJSON(steps.get_vars.outputs.SYSTEM_JSON).version}}
          PACKAGE_DOWNLOAD: ${{fromJSON(steps.get_vars.outputs.SYSTEM_JSON).download}}
      run: |
          echo "zip name: $ZIP_NAME"
          echo "package version: $PACKAGE_VERSION"
          echo "package download: $PACKAGE_DOWNLOAD"
  
    # Set up Node
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'

    # Set up pnpm
    - name: Install Dependencies
      uses: pnpm/action-setup@v2
      with: 
        version: 8
        run_install: true

    # Run our `build` script
    - name: Build All
      run: |
        pnpm install
        pnpm build
        pnpm test
        mv --force fudge-compiled.mjs fudge.mjs

    # Create a zip file with all files required by the module to add to the release
    - run: zip ${{steps.get_vars.outputs.ZIP_NAME}} -r lang templates packs/attributes packs/journals packs/ff-*  styles/*.css fudge.mjs fudge-compiled.mjs.map LICENSE.txt FudgeOGLicense.pdf fudge_srd.pdf README.md system.json template.json
